//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clases
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    
    public partial class C_Locacion
    {
        conexion con;
        public C_Locacion()
        {
            this.C_Cliente = new HashSet<C_Cliente>();
            this.C_Telemarketing = new HashSet<C_Telemarketing>();
        }
    
        public int idlocacion { get; set; }
        public string codigo { get; set; }
        public string descripcion { get; set; }
        public string direccion { get; set; }
    
        public virtual ICollection<C_Cliente> C_Cliente { get; set; }
        public virtual ICollection<C_Telemarketing> C_Telemarketing { get; set; }

        public List<C_Locacion> listarLocaciones()
        {
            List<C_Locacion> locaciones = new List<C_Locacion>();
            if (con == null)
                con = new conexion();
            con.conectar();
            SqlCommand cmd = new SqlCommand("_sp_listarLocaciones", con.cnxn);
            cmd.CommandType = CommandType.StoredProcedure;
            SqlDataReader dr = cmd.ExecuteReader();
            if (dr.HasRows)
            {
                while (dr.Read())
                {
                    C_Locacion locacion = new C_Locacion();
                    locacion.idlocacion = dr.GetInt32(0);
                    locacion.codigo = dr.GetString(1).Trim(new char[] { ' ' });
                    locacion.descripcion = dr.GetString(2).Trim(new char[] { ' ' });
                    locacion.direccion = dr.GetString(3).Trim(new char[] { ' ' }); 
                    locaciones.Add(locacion);
                }
            }
            con.desconectar();
            return locaciones;
        }
        public int nuevaLocacion()
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();
                SqlCommand cmd = new SqlCommand("_sp_nuevaLocacion", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@descripcion", descripcion);
                cmd.Parameters.AddWithValue("@codigo", codigo);
                cmd.Parameters.AddWithValue("@direccion",direccion);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;
            }
            catch
            {
                con.desconectar();
                return 0;
            }
        }

        public int editarLocacion()
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();
                SqlCommand cmd = new SqlCommand("_sp_editarLocacion", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@id", idlocacion);
                cmd.Parameters.AddWithValue("@descripcion", descripcion);
                cmd.Parameters.AddWithValue("@codigo", codigo);
                cmd.Parameters.AddWithValue("@direccion", direccion);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;
            }
            catch
            {
                con.desconectar();
                return 0;
            }
        }
        public int existeCodigo()
        {
            if (con == null)
                con = new conexion();
            con.conectar();
            SqlCommand cmd = new SqlCommand("_sp_existeCodigoLoc", con.cnxn);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@codigo", codigo);
            SqlDataReader dr = cmd.ExecuteReader();
            if (dr.HasRows)
            {
                con.desconectar();
                return 1;
            }
            else
            {
                con.desconectar();
                return 0;
            }
        }
    }
}
