<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQGSURBVFhH7ZbrUxNXGIf59/qldqZ1LDP90I6XWiSYWgmY
        1pKxgEAHFByDQBYERQwDKCgpiYTh0jhgEwXl4gBijOEmQRMkySZB3p7fC1nsFNldmc50pt2Z58vZ8/7O
        s+fsObsZ/1//qkuq7aUvDtjo00+q6OBnEhmzb9DRrxv2xzdNnIXMzIOVtD3U7tfnB+rI6YyS1yfTaWMb
        +edW9k328WYaHU3Qb451ysv1ilz7hyVgicEB7OdmQ8wj7yJ5h+d1MfN0hQL+Vc5B3u8emazVEZ6J7eH+
        fuHm8IjMoHB2OsT0Of3k6JzTxeSTZZoPvuEc5A0MxulyzZq6AEwBCoOB18yT0WUxC0u68M+t0tLiGucg
        z+WO06VqDQIDQ8JWgMJXyxEGYenl0Mp8MMy1yEFet1PjDLj7ZQaFCAGegSC5HM91gaVbDUU5B3maBZxu
        mUEhphDgpYKEHgL+MIXfxDgHeZ0OISCtqwt0u4StAIVrEZlBEJ5GD5FwnGuRg7yOuxoFOnuErQCF6bAR
        zwL19wZ0EQxEKBZNcA7yWrs0CnQ4hK3gfQEE7rbV9gJLkJBTnIM8FmiMqQvY78gMCpPJDWZrGfQhx1O0
        kXrHObaWODW2aRRo6ZQZFG5ubu4b5GDgNKoC124lmJwTbXyS7ZfjR5rJ2iyO4W1UBaT2BHNJWiBD1k1+
        go8F9edKH+sTqBODgxp7jC7Wh6i8bmmLmiBTVq2N0ivLTIX0mq60JhQ0C1Q1hclwxkdHc4boWLaLJNsI
        2e1jqlxr8pEp30WHDYNM7rmJjxRoXmOBwyc9dCSrh0YfvuB9jTd7L7BjzlrcXAdMhVNKJlAVsN1OMRAw
        WsbpW5OXjp10k+/Bcw4vLepWcPWM808H5NL03ZviGUAdyC+dUTKBqoB0Z4O53Bql0yUzZCgYp6zcQXow
        /Iyf8Dujk9tOmP+g212T/MV7OrGo4BmcJvPPvdwHnK18oWQCVYH67g3G2h6j/Ao/fX9+mgxmDw3f3xLI
        +sHNbTmWMWrvmKDQyrr4/K4oQBRLgD7AYl1QMoGqwFXnO6ZGHEY/WZfIdOElGQt8ioAhb4DbEI6XDkd1
        +rMNsAyW4iHuAwqlkJIJNAvU3k2SxbZKZusrOlU4tiMgZgNtpvJn1GJ/zF89zEKayfF5sffvcx9wXuwm
        XQJNfZuMJDoXXo9SQcNbMpVNKQKnzH10pmKa8oof8QxgZ6y/3WF2ZpmKKka4DpTZ40omUBW43k9MQy9R
        SWuSfrmR5AHTLyGm+KFvC/wvoi390QL4Ey6p9HIdKO9IKZlgT4HMzMa/CPx6i6i4jejHKvGbJbYcnna3
        8/59IFh0wct14GLXzuBX7yVVBL6s5w7/JF8dqv2wwH/wysj4E8jZqWZHwoxJAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACAEBAA0NDQAeBgQAGwsMAA4QEAASEREAGBYWABkZGQAhAwAAIgUAACcGAAAoBQAALwcAACUI
        BQAhDw4ANAcAADkIAAA9CQAAOgsFADISDgA0Eg4AJRUVACUYHAAiHR0ALh0fADceHAAfJycAKiQkACwm
        JgAqKSkAOSgnADMqKgAhLzMASgoAAEwLAABSCwAAUwwAAFUPAQBZDAAAXQ4AAGANAABoDwAAbw8AAGMQ
        AgBpEAAAbxAAAHURAAB/EgAADzFGAA00TAAePVQAJz5FACVBVQAtR1sAGEViABBSdAApVXEASkFAAExH
        RwBaTk0AQUtUAFxRUABmWVcAblxZAGleXwBsX1wAcF1aAGtgXwBwYF4ATWppAFRmfQBhYWEAaWRkAGpm
        bgBxZWMAcmVkAHVmZQB1aGYAeWppAHpsawB+bWsAem1sAHxubQB+cG8Aa2xyAHJycgB2cnIAe3d2AH14
        dgB1eX8AeXl5AIJ0cwCAdXQAhXZ1AIZ4dgCIeHcAj3l3AIF8egCIengAi3x7AIx8egCKf34Ajn58AIuA
        fwAPYpQAI2KMACBqkgAja5QAOnGdACR0oABaeYsAZXiEADWCuAB6iokAe5SZAFmPpABOibkAdpm5AH6z
        swAShMIADZPdADeMxAA6i8QAOY7GAD+MxAAlkcwAPpTMADqb1gAuo90AP6DaAA2i8wAcr/8APK/rACOm
        8AAnqvIALavwACWy/wAntf8ALbT8ADew8AA1uv8AO77/AEiPxQBQkscAQ5vQAGOezwBln88AXq3HAFSh
        zABHoNQAS6baAFGs3QBRs9sAZ6DPAH+3wQB/rdQAarnaAEq14wBeuOQAXLrqAEa//wBhuuUASMD/AFHF
        /wBayP8AXcj/AF/N/wBtx+UAdM/rAGDL/wB+z/MAbNL9AHnQ8wB20v8Aftr/AJGCggCThIMAlIWDAJaG
        hACbhYIAmYeGAJaIhgCZiIYAlIuLAJ6MigCdlZQAoI+NAKKRjwCjk5EApJKQAKaXlQCplJIArJaUAKuZ
        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
        A///4Af///gf////////////
</value>
  </data>
</root>