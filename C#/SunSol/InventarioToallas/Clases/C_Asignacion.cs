//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clases
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using Clases;
    using System.ComponentModel;
    
    public partial class C_Asignacion
    {

        conexion con;
        public int idAsignacion { get; set; }
        public Nullable<int> idcamarera { get; set; }
        public Nullable<int> idsupervisor { get; set; }
        public Nullable<int> idhabitacion { get; set; }
        public Nullable<System.DateTime> fecha { get; set; }
        public Nullable<int> status { get; set; }
        public Nullable<int> idUsuario { get; set; }
        public string num_hab { get; set; }
        public string status_hab { get; set; }
        public int num_pax { get; set; }

        public string modulo_hab { get; set; }
        public string tipo_hab { get; set; }

        public string Section { get; set; }

        public int piso { get; set; }



        public int llegada { get; set; }

        public int salida { get; set; }

        #region AGREGAR ASIGNACION

        public int Guardar()
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();
                SqlCommand cmd = new SqlCommand("_sp_nuevaAsignacion", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idcamarera", idcamarera);
                cmd.Parameters.AddWithValue("@idsupervisor", idsupervisor);
                cmd.Parameters.AddWithValue("@idhabitacion", idhabitacion);
                cmd.Parameters.AddWithValue("@fecha", DateTime.Today);
                cmd.Parameters.AddWithValue("@idusu", idUsuario);
                cmd.Parameters.AddWithValue("@num_hab", num_hab);
                cmd.Parameters.AddWithValue("@status_hab", status_hab);
                cmd.Parameters.AddWithValue("@num_pax", num_pax);
                cmd.Parameters.AddWithValue("@mod_hab", modulo_hab);
                cmd.Parameters.AddWithValue("@tipo_hab", tipo_hab);
                cmd.Parameters.AddWithValue("@lleg", llegada);
                cmd.Parameters.AddWithValue("@secc", Section);
                cmd.Parameters.AddWithValue("@idpiso", piso);
                cmd.Parameters.AddWithValue("@sal", salida);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;
            }
            catch
            {
                con.desconectar();
                return 0;
            }

        }

        #endregion

        public int Modificar()
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();
                SqlCommand cmd = new SqlCommand("_sp_ModAsignacion", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idcamarera", idcamarera);
                cmd.Parameters.AddWithValue("@idsupervisor", idsupervisor);
                cmd.Parameters.AddWithValue("@fecha", DateTime.Today);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;
            }
            catch
            {
                con.desconectar();
                return 0;
            }

        }

        #region ELIMINAR ASIGNACIONES POR CAMARERA (EDITAR)

        public int EliminarAsignPorCamarera(int idc)
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();
                SqlCommand cmd = new SqlCommand("_sp_EliminarAsignPorCamarera", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idc", idc);
                cmd.Parameters.AddWithValue("@fecha", DateTime.Today);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }

        }

        #endregion
    }
}
