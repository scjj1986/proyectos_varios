//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clases
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using Clases;
    using System.ComponentModel;
    
    public partial class C_Extra
    {

        conexion con;
        
        public int idExtra { get; set; }
        public Nullable<int> idSuministro { get; set; }
        public Nullable<int> idHabitacion { get; set; }

        public Nullable<int> idCamarera { get; set; }
        public Nullable<int> cantidad { get; set; }
        public Nullable<System.DateTime> fecha { get; set; }
        public Nullable<int> idUsuario { get; set; }
        public Nullable<System.DateTime> fechaModificacion { get; set; }

        public string observacion { get; set; }

        public string hora { get; set; }

        public string descripcion { get; set; }

        public string nhab { get; set; }

        public string tipo { get; set; }
    
        public virtual C_Suministro C_Suministro { get; set; }
        public virtual C_Usuario C_Usuario { get; set; }

        public int Guardar()
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();
                SqlCommand cmd = new SqlCommand("_sp_nuevoExtra", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idsum", idSuministro);
                cmd.Parameters.AddWithValue("@idh", idHabitacion);
                cmd.Parameters.AddWithValue("@fecha", fecha);
                cmd.Parameters.AddWithValue("@cant", cantidad);
                cmd.Parameters.AddWithValue("@idus", idUsuario);
                cmd.Parameters.AddWithValue("@fechamod", fechaModificacion);
                cmd.Parameters.AddWithValue("@idcam", idCamarera);
                cmd.Parameters.AddWithValue("@hora", hora);
                if (observacion==null)
                    cmd.Parameters.AddWithValue("@obs", "-");
                else
                    cmd.Parameters.AddWithValue("@obs",observacion);
                cmd.Parameters.AddWithValue("@nhab", nhab);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }
        }



        public int Editar2()
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();
                SqlCommand cmd = new SqlCommand("_sp_editarExtra2", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idsum", idSuministro);
                cmd.Parameters.AddWithValue("@idh", idHabitacion);
                cmd.Parameters.AddWithValue("@fecha", fecha);
                cmd.Parameters.AddWithValue("@cant", cantidad);
                cmd.Parameters.AddWithValue("@idus", idUsuario);
                cmd.Parameters.AddWithValue("@fechamod", fechaModificacion);
                cmd.Parameters.AddWithValue("@idcam", idCamarera);
                cmd.Parameters.AddWithValue("@hora", hora);
                cmd.Parameters.AddWithValue("@obs", observacion);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }
        }

        

        public int EliminarExtraHabFecha()//Eliminar por módulo suministro de habitación
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();

                /*
                string fechacad = Convert.ToString(fch);
                fechacad = fechacad.Replace(" 12:00:00 a.m.", "");
                String[] fech = fechacad.Split('/');
                fechacad = fech[2] + "-" + fech[1] + "-" + fech[0];*/


                SqlCommand cmd = new SqlCommand("_sp_EliminarExtraHabFecha", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                //cmd.Parameters.AddWithValue("@idsum", idSuministro);
                cmd.Parameters.AddWithValue("@idh", idHabitacion);
                cmd.Parameters.AddWithValue("@fecha", fecha);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }

        }

        public int EliminarSuministroExtra()//Eliminar por módulo suministro extra
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();

                SqlCommand cmd = new SqlCommand("_sp_EliminarSuministroExtra", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idsum", idSuministro);
                cmd.Parameters.AddWithValue("@idh", idHabitacion);
                cmd.Parameters.AddWithValue("@fecha", fecha);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }

        }

        public int RestarCantidadRealMov()//Restar cantidad real en movimiento
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();

                SqlCommand cmd = new SqlCommand("_sp_RestarCantidadRealMov", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idsum", idSuministro);
                cmd.Parameters.AddWithValue("@idh", idHabitacion);
                cmd.Parameters.AddWithValue("@fecha", fecha);
                cmd.Parameters.AddWithValue("@cant", cantidad);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }

        }

        public int RestarSuciaEstimadaMov()//Restar sucia etimada en movimiento
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();

                SqlCommand cmd = new SqlCommand("_sp_RestarSuciaEstimadaMov", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idsum", idSuministro);
                cmd.Parameters.AddWithValue("@idh", idHabitacion);
                cmd.Parameters.AddWithValue("@fecha",Convert.ToDateTime(fecha).AddDays(1));
                cmd.Parameters.AddWithValue("@cant", cantidad);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }

        }

        public int SumarCantidadRealMov()//Sumar cantidad real en movimiento
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();

                SqlCommand cmd = new SqlCommand("_sp_SumarCantidadRealMov", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idsum", idSuministro);
                cmd.Parameters.AddWithValue("@idh", idHabitacion);
                cmd.Parameters.AddWithValue("@fecha", fecha);
                cmd.Parameters.AddWithValue("@cant", cantidad);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }

        }

        public int SumarSuciaEstimadaMov()//Sumar sucia etimada en movimiento
        {
            try
            {
                if (con == null)
                    con = new conexion();
                con.conectar();

                SqlCommand cmd = new SqlCommand("_sp_SumarSuciaEstimadaMov", con.cnxn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@idsum", idSuministro);
                cmd.Parameters.AddWithValue("@idh", idHabitacion);
                cmd.Parameters.AddWithValue("@fecha", Convert.ToDateTime(fecha).AddDays(1));
                cmd.Parameters.AddWithValue("@cant", cantidad);
                cmd.ExecuteNonQuery();
                con.desconectar();
                return 1;

            }
            catch
            {
                con.desconectar();
                return 0;

            }

        }

        public C_Extra BuscarSumExtra()
        {

            if (con == null)
                con = new conexion();
            con.conectar();
            C_Extra ext = null;
            SqlCommand cmd = new SqlCommand("_sp_BuscarSumExtra", con.cnxn);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@idh", idHabitacion);
            cmd.Parameters.AddWithValue("@fecha", fecha);
            cmd.Parameters.AddWithValue("@ids", idSuministro);
            SqlDataReader dr = cmd.ExecuteReader();
            if (dr.HasRows)
            {
                while (dr.Read())
                {
                    ext = new C_Extra();
                    ext.idSuministro = dr.GetInt32(0);
                    ext.idHabitacion = dr.GetInt32(3);
                    ext.cantidad = dr.GetInt32(4);
                    ext.fecha = dr.GetDateTime(5);
                    ext.descripcion = dr.GetString(2).Trim(new char[] { ' ' });
                    ext.observacion = dr.GetString(8).Trim(new char[] { ' ' });
                }

            }
            con.desconectar();
            return ext;
        }

        public List<C_Extra> listarMotivos()
        {
            List<C_Extra> list = new List<C_Extra>();
            if (con == null)
                con = new conexion();
            con.conectar();
            SqlCommand cmd = new SqlCommand("_sp_listarMotivoExtra", con.cnxn);
            cmd.CommandType = CommandType.StoredProcedure;
            SqlDataReader dr = cmd.ExecuteReader();
            if (dr.HasRows)
            {
                while (dr.Read())
                {
                    C_Extra nodo = new C_Extra();
                    nodo.observacion = dr.GetString(1).Trim(new char[] { ' ' });
                    list.Add(nodo);
                }
            }
            con.desconectar();
            return list;
        }
    }
}
